'''
# 친구 목록 관리 프로그램

**리스트 활용**

**문제 설명**

- 다음은 친구 목록을 관리할 수 있는 간단한 콘솔 프로그램입니다. 이 프로그램은 사용자가 친구 목록을 출력하고, 새로운 친구를 추가하고, 기존 친구를 삭제하거나 이름을 변경할 수 있는 기능을 제공합니다. 프로그램은 사용자가 '종료' 옵션을 선택하기 전까지 계속 실행됩니다.

당신은 아래의 기능들을 포함한 프로그램을 작성해야 합니다.

**프로그램 요구사항:**

1. **메뉴 출력**:
    - 프로그램은 사용자가 선택할 수 있는 메뉴를 반복해서 출력해야 합니다.
    - 메뉴는 다음과 같습니다:
        1. 친구 리스트 출력
        2. 친구 추가
        3. 친구 삭제
        4. 친구 이름 변경
        5. 종료
2. **친구 리스트 출력**:
    - 사용자가 메뉴에서 "1"을 선택하면 현재 저장된 친구들의 리스트를 출력해야 합니다.
3. **친구 추가**:
    - 사용자가 메뉴에서 "2"를 선택하면 새로운 친구의 이름을 입력받아 리스트에 추가해야 합니다.
4. **친구 삭제**:
    - 사용자가 메뉴에서 "3"을 선택하면 삭제할 친구의 이름을 입력받아, 해당 이름이 리스트에 있는 경우 삭제해야 합니다.
    - 만약 입력한 이름이 리스트에 없다면, "삭제할 친구가 리스트에 없습니다."라는 메시지를 출력해야 합니다.
5. **친구 이름 변경**:
    - 사용자가 메뉴에서 "4"를 선택하면 변경하고 싶은 친구의 기존 이름과 새로운 이름을 입력받아 리스트에서 이름을 변경해야 합니다.
    - 만약 기존 이름이 리스트에 없다면, "변경하고 싶은 친구 이름이 존재하지 않습니다."라는 메시지를 출력해야 합니다.
6. **종료**:
    - 사용자가 메뉴에서 "9"를 선택하면 프로그램을 종료해야 합니다.
'''

def print_menu():
    print('''
    1. 친구 리스트 출력
    2. 친구 추가
    3. 친구 삭제
    4. 친구 이름 변경
    9. 종료
    ''')

menu = -1
friend_list = []

while True:
    print_menu()
    menu = int(input("메뉴를 선택하세요: "))
    if menu == 9:
        print("프로그램이 종료되었습니다.")
        break
    elif menu == 1:
        print(friend_list)
    elif menu == 2:
        friend = input("추가할 친구 이름을 입력하세요:")
        friend_list.append(friend)
    elif menu == 3:
        friend = input("삭제할 친구 이름을 입력하세요:")
        friend_list.remove(friend)
    elif menu == 4:
        friend_before = input("변경하고 싶은 친구 이름을 입력하세요:")
        friend_after = input("새로운 이름을 입력하세요: ")
        idx = friend_list.index(friend_before)
        friend_list[idx] = friend_after