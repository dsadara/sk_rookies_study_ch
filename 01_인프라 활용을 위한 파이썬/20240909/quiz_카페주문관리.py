'''
# 카페 주문 관리 프로그램

**딕셔너리 활용**

### 문제 설명:

카페에서 손님이 메뉴를 주문하고 결제하는 프로그램을 작성하세요. 메뉴는 고정되어 있으며, 손님은 원하는 메뉴를 선택하여 여러 번 주문할 수 있습니다. 주문을 종료하려면 `"q"`를 입력하고, 총 금액을 계산하여 결제를 진행합니다. 손님이 입력한 금액이 총 주문 금액 이상이면 거스름돈을 계산하여 출력하고, 금액이 부족하면 "돈이 부족합니다."라는 메시지를 출력해야 합니다.

### 문제 조건:

1. **고정된 메뉴**:
    - 아메리카노: 4000원
    - 카페라떼: 5000원
    - 카페모카: 6000원
2. **주문 로직**:
    - 손님은 메뉴를 한 번에 하나씩 주문합니다.
    - 주문이 끝나면 `"q"`를 입력하여 주문을 종료할 수 있습니다.
    - 메뉴가 존재하지 않는 경우, "메뉴가 없습니다."라는 메시지를 출력하고 다시 입력받습니다.
3. **결제 로직**:
    - 주문한 메뉴가 있으면, 총 금액을 계산한 후 결제 금액을 입력받습니다.
    - 결제 금액이 충분하면 거스름돈을 계산하여 출력합니다.
    - 결제 금액이 부족하면 "돈이 부족합니다."를 출력합니다.
4. 주문하지 않은 경우, 프로그램은 결제 과정을 진행하지 않고 종료합니다.

### 입력 형식:

- 주문할 메뉴 이름을 입력하세요. 메뉴를 선택한 후에 `"q"`를 입력하면 주문을 종료합니다.
- 주문 종료 후, 총 금액을 결제할 금액을 정수로 입력하세요.

### 출력 형식:

- 선택한 메뉴와 총 금액을 출력합니다.
- 결제가 완료되면 구매한 메뉴의 개수와 거스름돈을 출력합니다.
- 금액이 부족하면 "돈이 부족합니다."를 출력합니다.
- 메뉴가 없을 경우 "메뉴가 없습니다." 메시지를 출력합니다.
'''

menu = {"아메리카노": 4000, "카페라떼": 5000, "카페모카": 6000}

print("===== 메뉴 =====")
for item, price in menu.items():
    print(f"{item}: {price}")

order_list = []
sum = 0

while True:
    order = input("주문할 메뉴를 입력하세요 (종료: 'q'):")
    if order == 'q':
        break
    price = menu.get(order, 0)
    if price != 0:
        sum += price
        order_list.append(order)

cash = int(input(f"총 금액은 {sum}원입니다. 돈을 넣으세요:"))

print(f"선택한 메뉴: {order_list}")

if cash < sum:
    print("돈이 부족합니다.")
else:
    print(f"{len(order_list)}개 구매 완료. 거스름돈은 {cash - sum}원입니다.")